"use strict";function OutputStream(n){function t(n,t){return n.replace(/[\u0080-\uffff]/g,function(n){var i=n.charCodeAt(0).toString(16);if(i.length<=2&&!t){for(;i.length<2;)i="0"+i;return"\\x"+i}for(;i.length<4;)i="0"+i;return"\\u"+i})}function i(i){var e=0,o=0;return i=i.replace(/[\\\b\f\n\r\t\x22\x27\u2028\u2029\0]/g,function(n){switch(n){case"\\":return"\\\\";case"\b":return"\\b";case"\f":return"\\f";case"\n":return"\\n";case"\r":return"\\r";case"\u2028":return"\\u2028";case"\u2029":return"\\u2029";case'"':return++e,'"';case"'":return++o,"'";case"\0":return"\\0"}return n}),n.ascii_only&&(i=t(i)),e>o?"'"+i.replace(/\x27/g,"\\'")+"'":'"'+i.replace(/\x22/g,'\\"')+'"'}function e(t){var e=i(t);return n.inline_script&&(e=e.replace(/<\x2fscript([>\/\t\n\f\r ])/gi,"<\\/script$1")),e}function o(i){return i=i.toString(),n.ascii_only&&(i=t(i,!0)),i}function r(t){return repeat_string(" ",n.indent_start+A-t*n.indent_level)}function c(){return w.charAt(w.length-1)}function a(){n.max_line_len&&h>n.max_line_len&&p("\n")}function p(t){t=String(t);var i=t.charAt(0);if(g&&(i&&!(";}".indexOf(i)<0)||/[;]$/.test(w)||(n.semicolons||E(i)?(b+=";",h++,y++):(b+="\n",y++,m++,h=0),n.beautify||(v=!1)),g=!1,a()),!n.beautify&&n.preserve_line&&N[N.length-1])for(var e=N[N.length-1].start.line;e>m;)b+="\n",y++,m++,h=0,v=!1;if(v){var o=c();(is_identifier_char(o)&&(is_identifier_char(i)||"\\"==i)||/^[\+\-\/]$/.test(i)&&i==o)&&(b+=" ",h++,y++),v=!1}var r=t.split(/\r?\n/),p=r.length-1;m+=p,0==p?h+=r[p].length:h=r[p].length,y+=t.length,w=t,b+=t}function s(){g=!1,p(";")}function f(){return A+n.indent_level}function u(n){var t;return p("{"),k(),C(f(),function(){t=n()}),D(),p("}"),t}function _(n){p("(");var t=n();return p(")"),t}function l(n){p("[");var t=n();return p("]"),t}function S(){p(","),x()}function d(){p(":"),n.space_colon&&x()}function T(){return b}n=defaults(n,{indent_start:0,indent_level:4,quote_keys:!1,space_colon:!0,ascii_only:!1,inline_script:!1,width:80,max_line_len:32e3,ie_proof:!0,beautify:!1,source_map:null,bracketize:!1,semicolons:!0,comments:!1,preserve_line:!1},!0);var A=0,h=0,m=1,y=0,b="",v=!1,g=!1,w=null,E=makePredicate("( [ + * / - , ."),x=n.beautify?function(){p(" ")}:function(){v=!0},D=n.beautify?function(t){n.beautify&&p(r(t?.5:0))}:noop,C=n.beautify?function(n,t){n===!0&&(n=f());var i=A;A=n;var e=t();return A=i,e}:function(n,t){return t()},k=n.beautify?function(){p("\n")}:noop,F=n.beautify?function(){p(";")}:function(){g=!0},O=n.source_map?function(t,i){try{t&&n.source_map.add(t.file||"?",m,h,t.line,t.col,i||"name"!=t.type?i:t.value)}catch(e){AST_Node.warn("Couldn't figure out mapping for {file}:{line},{col} â†’ {cline},{ccol} [{name}]",{file:t.file,line:t.line,col:t.col,cline:m,ccol:h,name:i||""})}}:noop,N=[];return{get:T,toString:T,indent:D,indentation:function(){return A},current_width:function(){return h-A},should_break:function(){return n.width&&this.current_width()>=n.width},newline:k,print:p,space:x,comma:S,colon:d,last:function(){return w},semicolon:F,force_semicolon:s,to_ascii:t,print_name:function(n){p(o(n))},print_string:function(n){p(e(n))},next_indent:f,with_indent:C,with_block:u,with_parens:_,with_square:l,add_mapping:O,option:function(t){return n[t]},line:function(){return m},col:function(){return h},pos:function(){return y},push_node:function(n){N.push(n)},pop_node:function(){return N.pop()},stack:function(){return N},parent:function(n){return N[N.length-2-(n||0)]}}}!function(){function n(n,t){n.DEFMETHOD("_codegen",t)}function t(n,t){n.DEFMETHOD("needs_parens",t)}function i(n){var t=n.parent();return t instanceof AST_Unary?!0:t instanceof AST_Binary&&!(t instanceof AST_Assign)?!0:t instanceof AST_Call&&t.expression===this?!0:t instanceof AST_Conditional&&t.condition===this?!0:t instanceof AST_PropAccess&&t.expression===this?!0:void 0}function e(n,t,i){var e=n.length-1;n.forEach(function(n,o){n instanceof AST_EmptyStatement||(i.indent(),n.print(i),o==e&&t||(i.newline(),t&&i.newline()))})}function o(n,t){n.length>0?t.with_block(function(){e(n,!1,t)}):t.print("{}")}function r(n,t){if(t.option("bracketize"))return _(n.body,t),void 0;if(!n.body)return t.force_semicolon();if(n.body instanceof AST_Do&&t.option("ie_proof"))return _(n.body,t),void 0;for(var i=n.body;;)if(i instanceof AST_If){if(!i.alternative)return _(n.body,t),void 0;i=i.alternative}else{if(!(i instanceof AST_StatementWithBody))break;i=i.body}a(n.body,t)}function c(n,t,i){if(i)try{n.walk(new TreeWalker(function(n){if(n instanceof AST_Binary&&"in"==n.operator)throw t})),n.print(t)}catch(e){if(e!==t)throw e;n.print(t,!0)}else n.print(t)}function a(n,t){t.option("bracketize")?!n||n instanceof AST_EmptyStatement?t.print("{}"):n instanceof AST_BlockStatement?n.print(t):t.with_block(function(){t.indent(),n.print(t),t.newline()}):!n||n instanceof AST_EmptyStatement?t.force_semicolon():n.print(t)}function p(n){for(var t=n.stack(),i=t.length,e=t[--i],o=t[--i];i>0;){if(o instanceof AST_Statement&&o.body===e)return!0;if(!(o instanceof AST_Seq&&o.car===e||o instanceof AST_Call&&o.expression===e||o instanceof AST_Dot&&o.expression===e||o instanceof AST_Sub&&o.expression===e||o instanceof AST_Conditional&&o.condition===e||o instanceof AST_Binary&&o.left===e||o instanceof AST_UnaryPostfix&&o.expression===e))return!1;e=o,o=t[--i]}}function s(n,t){return 0==n.args.length&&!t.option("beautify")}function f(n){for(var t=n[0],i=t.length,e=1;e<n.length;++e)n[e].length<i&&(t=n[e],i=t.length);return t}function u(n){var t,i=n.toString(10),e=[i.replace(/^0\./,".").replace("e+","e")];return Math.floor(n)===n?(n>=0?e.push("0x"+n.toString(16).toLowerCase(),"0"+n.toString(8)):e.push("-0x"+(-n).toString(16).toLowerCase(),"-0"+(-n).toString(8)),(t=/^(.*?)(0+)$/.exec(n))&&e.push(t[1]+"e"+t[2].length)):(t=/^0?\.(0+)(.*)$/.exec(n))&&e.push(t[2]+"e-"+(t[1].length+t[2].length),i.substr(i.indexOf("."))),f(e)}function _(n,t){return n instanceof AST_BlockStatement?(n.print(t),void 0):(t.with_block(function(){t.indent(),n.print(t),t.newline()}),void 0)}function l(n,t){n.DEFMETHOD("add_source_map",function(n){t(this,n)})}function S(n,t){t.add_mapping(n.start)}AST_Node.DEFMETHOD("print",function(n,t){var i=this,e=i._codegen;n.push_node(i);var o=i.needs_parens(n),r=i instanceof AST_Function&&!n.option("beautify");t||o&&!r?n.with_parens(function(){i.add_comments(n),i.add_source_map(n),e(i,n)}):(i.add_comments(n),o&&r&&n.print("!"),i.add_source_map(n),e(i,n)),n.pop_node()}),AST_Node.DEFMETHOD("print_to_string",function(n){var t=OutputStream(n);return this.print(t),t.get()}),AST_Node.DEFMETHOD("add_comments",function(n){var t=n.option("comments"),i=this;if(t){var e=i.start;if(e&&!e._comments_dumped){e._comments_dumped=!0;var o=e.comments_before;i instanceof AST_Exit&&i.value&&i.value.start.comments_before.length>0&&(o=(o||[]).concat(i.value.start.comments_before),i.value.start.comments_before=[]),t.test?o=o.filter(function(n){return t.test(n.value)}):"function"==typeof t&&(o=o.filter(function(n){return t(i,n)})),o.forEach(function(t){"comment1"==t.type?(n.print("//"+t.value+"\n"),n.indent()):"comment2"==t.type&&(n.print("/*"+t.value+"*/"),e.nlb?(n.print("\n"),n.indent()):n.space())})}}}),t(AST_Node,function(){return!1}),t(AST_Function,function(n){return p(n)}),t(AST_Object,function(n){return p(n)}),t(AST_Unary,function(n){var t=n.parent();return t instanceof AST_PropAccess&&t.expression===this}),t(AST_Seq,function(n){var t=n.parent();return t instanceof AST_Call||t instanceof AST_Unary||t instanceof AST_Binary||t instanceof AST_VarDef||t instanceof AST_Dot||t instanceof AST_Array||t instanceof AST_ObjectProperty||t instanceof AST_Conditional}),t(AST_Binary,function(n){var t=n.parent();if(t instanceof AST_Call&&t.expression===this)return!0;if(t instanceof AST_Unary)return!0;if(t instanceof AST_PropAccess&&t.expression===this)return!0;if(t instanceof AST_Binary){var i=t.operator,e=PRECEDENCE[i],o=this.operator,r=PRECEDENCE[o];if(e>r||e==r&&this===t.right&&(o!=i||"*"!=o&&"&&"!=o&&"||"!=o))return!0}}),t(AST_PropAccess,function(n){var t=n.parent();if(t instanceof AST_New&&t.expression===this)try{this.walk(new TreeWalker(function(n){if(n instanceof AST_Call)throw t}))}catch(i){if(i!==t)throw i;return!0}}),t(AST_Call,function(n){var t=n.parent();return t instanceof AST_New&&t.expression===this}),t(AST_New,function(n){var t=n.parent();return s(this,n)&&(t instanceof AST_PropAccess||t instanceof AST_Call&&t.expression===this)?!0:void 0}),t(AST_Number,function(n){var t=n.parent();return this.getValue()<0&&t instanceof AST_PropAccess&&t.expression===this?!0:void 0}),t(AST_NaN,function(n){var t=n.parent();return t instanceof AST_PropAccess&&t.expression===this?!0:void 0}),t(AST_Assign,i),t(AST_Conditional,i),n(AST_Directive,function(n,t){t.print_string(n.value),t.semicolon()}),n(AST_Debugger,function(n,t){t.print("debugger"),t.semicolon()}),AST_StatementWithBody.DEFMETHOD("_do_print_body",function(n){a(this.body,n)}),n(AST_Statement,function(n,t){n.body.print(t),t.semicolon()}),n(AST_Toplevel,function(n,t){e(n.body,!0,t),t.print("")}),n(AST_LabeledStatement,function(n,t){n.label.print(t),t.colon(),n.body.print(t)}),n(AST_SimpleStatement,function(n,t){n.body.print(t),t.semicolon()}),n(AST_BlockStatement,function(n,t){o(n.body,t)}),n(AST_EmptyStatement,function(n,t){t.semicolon()}),n(AST_Do,function(n,t){t.print("do"),t.space(),n._do_print_body(t),t.space(),t.print("while"),t.space(),t.with_parens(function(){n.condition.print(t)}),t.semicolon()}),n(AST_While,function(n,t){t.print("while"),t.space(),t.with_parens(function(){n.condition.print(t)}),t.space(),n._do_print_body(t)}),n(AST_For,function(n,t){t.print("for"),t.space(),t.with_parens(function(){n.init?(n.init instanceof AST_Definitions?n.init.print(t):c(n.init,t,!0),t.print(";"),t.space()):t.print(";"),n.condition?(n.condition.print(t),t.print(";"),t.space()):t.print(";"),n.step&&n.step.print(t)}),t.space(),n._do_print_body(t)}),n(AST_ForIn,function(n,t){t.print("for"),t.space(),t.with_parens(function(){n.init.print(t),t.space(),t.print("in"),t.space(),n.object.print(t)}),t.space(),n._do_print_body(t)}),n(AST_With,function(n,t){t.print("with"),t.space(),t.with_parens(function(){n.expression.print(t)}),t.space(),n._do_print_body(t)}),AST_Lambda.DEFMETHOD("_do_print",function(n,t){var i=this;t||n.print("function"),i.name&&(n.space(),i.name.print(n)),n.with_parens(function(){i.argnames.forEach(function(t,i){i&&n.comma(),t.print(n)})}),n.space(),o(i.body,n)}),n(AST_Lambda,function(n,t){n._do_print(t)}),AST_Exit.DEFMETHOD("_do_print",function(n,t){n.print(t),this.value&&(n.space(),this.value.print(n)),n.semicolon()}),n(AST_Return,function(n,t){n._do_print(t,"return")}),n(AST_Throw,function(n,t){n._do_print(t,"throw")}),AST_LoopControl.DEFMETHOD("_do_print",function(n,t){n.print(t),this.label&&(n.space(),this.label.print(n)),n.semicolon()}),n(AST_Break,function(n,t){n._do_print(t,"break")}),n(AST_Continue,function(n,t){n._do_print(t,"continue")}),n(AST_If,function(n,t){t.print("if"),t.space(),t.with_parens(function(){n.condition.print(t)}),t.space(),n.alternative?(r(n,t),t.space(),t.print("else"),t.space(),a(n.alternative,t)):n._do_print_body(t)}),n(AST_Switch,function(n,t){t.print("switch"),t.space(),t.with_parens(function(){n.expression.print(t)}),t.space(),n.body.length>0?t.with_block(function(){n.body.forEach(function(n,i){i&&t.newline(),t.indent(!0),n.print(t)})}):t.print("{}")}),AST_SwitchBranch.DEFMETHOD("_do_print_body",function(n){this.body.length>0&&(n.newline(),this.body.forEach(function(t){n.indent(),t.print(n),n.newline()}))}),n(AST_Default,function(n,t){t.print("default:"),n._do_print_body(t)}),n(AST_Case,function(n,t){t.print("case"),t.space(),n.expression.print(t),t.print(":"),n._do_print_body(t)}),n(AST_Try,function(n,t){t.print("try"),t.space(),o(n.body,t),n.bcatch&&(t.space(),n.bcatch.print(t)),n.bfinally&&(t.space(),n.bfinally.print(t))}),n(AST_Catch,function(n,t){t.print("catch"),t.space(),t.with_parens(function(){n.argname.print(t)}),t.space(),o(n.body,t)}),n(AST_Finally,function(n,t){t.print("finally"),t.space(),o(n.body,t)}),AST_Definitions.DEFMETHOD("_do_print",function(n,t){n.print(t),n.space(),this.definitions.forEach(function(t,i){i&&n.comma(),t.print(n)});var i=n.parent(),e=i instanceof AST_For||i instanceof AST_ForIn,o=e&&i.init===this;o||n.semicolon()}),n(AST_Var,function(n,t){n._do_print(t,"var")}),n(AST_Const,function(n,t){n._do_print(t,"const")}),n(AST_VarDef,function(n,t){if(n.name.print(t),n.value){t.space(),t.print("="),t.space();var i=t.parent(1),e=i instanceof AST_For||i instanceof AST_ForIn;c(n.value,t,e)}}),n(AST_Call,function(n,t){n.expression.print(t),n instanceof AST_New&&s(n,t)||t.with_parens(function(){n.args.forEach(function(n,i){i&&t.comma(),n.print(t)})})}),n(AST_New,function(n,t){t.print("new"),t.space(),AST_Call.prototype._codegen(n,t)}),AST_Seq.DEFMETHOD("_do_print",function(n){this.car.print(n),this.cdr&&(n.comma(),n.should_break()&&(n.newline(),n.indent()),this.cdr.print(n))}),n(AST_Seq,function(n,t){n._do_print(t)}),n(AST_Dot,function(n,t){var i=n.expression;i.print(t),i instanceof AST_Number&&i.getValue()>=0&&(/[xa-f.]/i.test(t.last())||t.print(".")),t.print("."),t.add_mapping(n.end),t.print_name(n.property)}),n(AST_Sub,function(n,t){n.expression.print(t),t.print("["),n.property.print(t),t.print("]")}),n(AST_UnaryPrefix,function(n,t){var i=n.operator;t.print(i),/^[a-z]/i.test(i)&&t.space(),n.expression.print(t)}),n(AST_UnaryPostfix,function(n,t){n.expression.print(t),t.print(n.operator)}),n(AST_Binary,function(n,t){n.left.print(t),t.space(),t.print(n.operator),t.space(),n.right.print(t)}),n(AST_Conditional,function(n,t){n.condition.print(t),t.space(),t.print("?"),t.space(),n.consequent.print(t),t.space(),t.colon(),n.alternative.print(t)}),n(AST_Array,function(n,t){t.with_square(function(){var i=n.elements,e=i.length;e>0&&t.space(),i.forEach(function(n,i){i&&t.comma(),n.print(t)}),e>0&&t.space()})}),n(AST_Object,function(n,t){n.properties.length>0?t.with_block(function(){n.properties.forEach(function(n,i){i&&(t.print(","),t.newline()),t.indent(),n.print(t)}),t.newline()}):t.print("{}")}),n(AST_ObjectKeyVal,function(n,t){var i=n.key;t.option("quote_keys")?t.print_string(i+""):("number"==typeof i||!t.option("beautify")&&+i+""==i)&&parseFloat(i)>=0?t.print(u(i)):is_identifier(i)?t.print_name(i):t.print_string(i),t.colon(),n.value.print(t)}),n(AST_ObjectSetter,function(n,t){t.print("set"),n.value._do_print(t,!0)}),n(AST_ObjectGetter,function(n,t){t.print("get"),n.value._do_print(t,!0)}),n(AST_Symbol,function(n,t){var i=n.definition();t.print_name(i?i.mangled_name||i.name:n.name)}),n(AST_Undefined,function(n,t){t.print("void 0")}),n(AST_Hole,noop),n(AST_Infinity,function(n,t){t.print("1/0")}),n(AST_NaN,function(n,t){t.print("0/0")}),n(AST_This,function(n,t){t.print("this")}),n(AST_Constant,function(n,t){t.print(n.getValue())}),n(AST_String,function(n,t){t.print_string(n.getValue())}),n(AST_Number,function(n,t){t.print(u(n.getValue()))}),n(AST_RegExp,function(n,t){var i=n.getValue().toString();t.option("ascii_only")&&(i=t.to_ascii(i)),t.print(i);var e=t.parent();e instanceof AST_Binary&&/^in/.test(e.operator)&&e.left===n&&t.print(" ")}),l(AST_Node,noop),l(AST_Directive,S),l(AST_Debugger,S),l(AST_Symbol,S),l(AST_Jump,S),l(AST_StatementWithBody,S),l(AST_LabeledStatement,noop),l(AST_Lambda,S),l(AST_Switch,S),l(AST_SwitchBranch,S),l(AST_BlockStatement,S),l(AST_Toplevel,noop),l(AST_New,S),l(AST_Try,S),l(AST_Catch,S),l(AST_Finally,S),l(AST_Definitions,S),l(AST_Constant,S),l(AST_ObjectProperty,function(n,t){t.add_mapping(n.start,n.key)})}();